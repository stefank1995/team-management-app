@using TeamManagementApp.Controllers;
@inject UserManager<AppUser> UserManager
@model List<KanbanData>
@{
	ViewData["Title"] = "Home";   
}


<div style="width:100%; margin: 0 auto;">
	<div id="card" class="card">
		<div id="card-header-wrapper">
			<div id="card-header" class="card-header d-flex justify-content-between align-items-center">
				<h3 class="card-title">Kanban Board</h3>
				<div class="d-flex justify-content-end align-items-center" >
					<button id="printButton" class="btn btn-secondary" style="margin-right: 10px;">
						<img src="/icons/printer32-darkmode.png" alt="Printer icon" style="width: 20px; height: 20px;">
					</button>
					<form id="reset-form" asp-area="" asp-controller="Home" asp-action="ResetBoard" method="post" onsubmit="return confirmReset();">
						<button type="submit" class="btn btn-danger">Reset Board</button>
					</form>
				</div>
			</div>
		</div>

		<div id="card-body" class="card-body">
			<div class="content-wrapper">
				<ejs-kanban id="Kanban" keyField="Status" created="onKanbanCreated">
					<e-data-manager url="/Home/LoadCard" updateUrl="/Home/UpdateCard" removeUrl="/Home/RemoveCard" insertUrl="/Home/InsertCard" adaptor="UrlAdaptor" crossDomain="false"></e-data-manager>
					<e-kanban-columns>
						<e-kanban-column headerText="To Do" keyField="Open" showAddButton="true"></e-kanban-column>
						<e-kanban-column headerText="In Progress" keyField="InProgress"></e-kanban-column>
						<e-kanban-column headerText="In Review" keyField="Review"></e-kanban-column>
						<e-kanban-column headerText="Done" keyField="Close"></e-kanban-column>
					</e-kanban-columns>
					<e-kanban-cardsettings headerField="RankId" contentField="Summary" template="#cardTemplate" selectionType="Multiple">

					</e-kanban-cardsettings>
					<e-kanban-dialogsettings template="#dialogTemplate"></e-kanban-dialogsettings>
					@if (ViewBag.SwimlanesEnabled)
					{
						<e-kanban-swimlanesettings keyField="AssigneeId" textField="Assignee" showEmptyRow=true allowDragAndDrop="true"></e-kanban-swimlanesettings>
					}
					
					<e-kanban-stackedHeaders>
						<e-kanban-stackedHeader text="To Do" keyFields="Open"></e-kanban-stackedHeader>
						<e-kanban-stackedHeader text="Development Phase" keyFields="InProgress, Review"></e-kanban-stackedHeader>
						<e-kanban-stackedHeader text="Done" keyFields="Close"></e-kanban-stackedHeader>
					</e-kanban-stackedHeaders>

				</ejs-kanban>
			</div>
		</div>

	</div>
</div>

<script id="dialogTemplate" type="text/x-jsrender">
	<div>
		<table class="custom-dialog-table">
			<tbody>
				<tr style="display: none;">
					<td class="custom-dialog-label">ID:</td>
					<td>
						<input type="hidden" class="e-field e-input" id="Id" name="Id" value="${Id}" disabled required />
					</td>
				</tr>
				<tr>
					<td class="custom-dialog-label">Task:</td>
					<td>
						<input type="text" class="e-field e-input" id="RankId" name="RankId" value="${RankId}" disabled required />
					</td>
				</tr>
				<tr>
					<td class="custom-dialog-label">Status:</td>
					<td>
						<select id="Status" name="Status" class="e-field">
							<option value="Open">Open</option>
							<option value="InProgress">InProgress</option>
							<option value="Review">Review</option>
							<option value="Close">Close</option>
						</select>
					</td>
				</tr>
				<tr>
					<td class="custom-dialog-label">Summary:</td>
					<td>
						<input type="text" class="e-field e-input" id="Summary" name="Summary" value="${Summary}" />
					</td>
				</tr>
				<tr>
					<td class="custom-dialog-label">Assigned By:</td>
					<td>
						<select id="AssignedById" name="AssignedById" class="e-field" value="${AssignedById}">
	@foreach (var user in UserManager.Users.ToList())
	{
									<option value="@user.Id" selected>@user.FullName</option>
	}
						</select>
					</td>
				</tr>
				<tr>
					<td class="custom-dialog-label">Assignee:</td>
					<td>
						<select id="AssigneeId" name="AssigneeId" class="e-field" value="${AssigneeId}">
	@foreach (var user in UserManager.Users.ToList())
	{
									<option value="@user.Id" selected>@user.FullName</option>


	}
						</select>
					</td>
				</tr>
				<tr>
					<td class="custom-dialog-label">Priority:</td>
					<td>
						<select id="Priority" name="Priority" class="e-field">
							<option value="Low">Low</option>
							<option value="Medium">Medium</option>
							<option value="High">High</option>
							<option value="Critical">Critical</option>
						</select>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
</script>


<script id="cardTemplate" type="text/x-jsrender">
	<table class="card-template-wrap">
		<colgroup>
			<col style="width:15%">
			<col style="width:85%">
		</colgroup>
		<tbody>
			<tr>
				<td class="card-icon-wrap">
					<div class="card-icon e-icons ${Status}"></div>
				</td>
				<td class="card-details-wrap">
					<table>
						<tbody>
							<tr>
								<td class="CardHeader">Task:</td>
								<td>${RankId}</td>
							</tr>
							<tr>
								<td class="CardHeader">Summary:</td>
								<td>${Summary}</td>
							</tr>
							<tr>
								<td class="CardHeader">Assigned by:</td>
								<td>${AssignedBy}</td>
							</tr>
							<tr>
								<td class="CardHeader">Assignee:</td>
								<td>${Assignee}</td>
							</tr>
							<tr>
								<td class="CardHeader">Priority:</td>
								<td>${Priority}</td>
							</tr>
						</tbody>
					</table>
				</td>
			</tr>
		</tbody>
	</table>
</script>





<style type="text/css">

	.prop-grid .row {
		padding: 10px 0;
	}

	.e-kanban th.e-template {
		text-align: center;
	}

	.e-kanban .e-card {
		height: auto !important;
	}

	.e-kanban.e-rtl th.e-template {
		text-align: right;
	}

	.e-kanban.e-rtl .header-template-wrap .header-text {
		margin-right: 15px;
	}

	.e-kanban .card-template-wrap {
		line-height: 1.2;
		font-size: 12px;
		height: 100%;
		table-layout: fixed;
		width: 100%;
	}

	.e-kanban .card-template-wrap td {
		background: none !important;
		border: none !important;
		height: auto !important;
		padding: 2px;
		line-height: 1.6;
	}

	


	

	
	.card {
		width: 100%;
		margin: 0 auto;

		overflow-x: auto;
		max-height: 100%;
		border: 1px solid #ccc;
		position: relative;
	}

	.card-title {
		margin: 0;
		font-size: 20px;
	}
	
	#card-header-wrapper {
		position: sticky;
		top: 0;
		background-color: #f8f8f8;
		z-index: 2; /* Higher z-index to appear above other content */
		padding: 5px; 
		border-bottom: 1px solid #ccc;
		max-width: 100%;
	}

	#card-header {
		background-color: #f8f8f8;
		position: sticky;
		top: 0;
		border-bottom: none;
		padding: 5px; /* Reduce top and bottom padding */
	}
	.card-body {
		padding: 20px 0px 0px; 
		overflow-x: auto;
		min-width: 1000px;
		max-height: 500px;


	}
	
	 
</style>

<script>
	var kanbanObj;


	function onKanbanCreated() {
		kanbanObj = this;
	}


	function confirmReset() {
		Swal.fire({
			title: 'Are you sure?',
			text: 'This action will reset the board. This cannot be undone.',
			icon: 'warning',
			showCancelButton: true,
			confirmButtonText: 'Yes, reset it!',
			cancelButtonText: 'Cancel',
			reverseButtons: true
		}).then((result) => {
			if (result.isConfirmed) {
				// Submit the form if confirmed
				document.getElementById('reset-form').submit();
			}
		});
		return false; // Prevent form submission by default
	}

</script>


<script>
	// JavaScript to track horizontal scroll and adjust left position of the wrapper
	var cardHeaderWrapper = document.getElementById('card-header-wrapper');

	window.addEventListener('load', function () {
		var scrollLeft = cardHeaderWrapper.scrollLeft;
		cardHeaderWrapper.style.left = -scrollLeft + 'px';


	});
</script>

@*<script>
    document.getElementById('printButton').addEventListener('click', function () {
        printCardBody();
    });

    function printCardBody() {
        // Create a copy of the card body
        const cardBody = document.querySelector('.card-body').cloneNode(true);

        // Create a new page for printing
        const printWindow = window.open('', '', 'width=600,height=600');
        printWindow.document.open();
        printWindow.document.write('<html><head><title>Print</title></head><body>');

        // Add the card body content to the new page
        printWindow.document.body.appendChild(cardBody);



        // Close the new page and print
        printWindow.document.write('</body></html>');
        printWindow.document.close();
        printWindow.print();

    }
</script>*@



<script>
	document.getElementById('printButton').addEventListener('click', function () {
		window.print();
    });
    
</script>

