@using Microsoft.AspNetCore.Identity
@inject UserManager<AppUser> UserManager
@{
    ViewData["Title"] = "App Settings";
}

<h4>App Settings</h4>
<hr />
<div class="container dark-mode">
    <div class="form-group">
        <label for="darkmode-toggle">Dark Mode</label>
        <div class="form-check form-switch">
            <input type="checkbox" class="form-check-input" id="darkmode-toggle" @(ViewBag.DarkModeEnabled ? "checked" : "")>
            <label class="form-check-label" for="darkmode-toggle">Enable Dark Mode</label>
        </div>
    </div>
    <div class="form-group">
        <label for="swimlanes-toggle">Swimlanes</label>
        <div class="form-check form-switch">
            <input type="checkbox" class="form-check-input" id="swimlanes-toggle" @(ViewBag.SwimlanesEnabled ? "checked" : "")>
            <label class="form-check-label" for="swimlanes-toggle">Show Swimlanes</label>
        </div>
    </div>
</div>

<style>

</style>

<!-- Add Bootstrap and custom JavaScript -->
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"></script>

<script>
 
    // Dark Mode Toggle
    $('#darkmode-toggle').on('change', function () {
        const darkModeEnabled = this.checked;
        const swimlanesEnabled = $('#swimlanes-toggle').prop('checked'); // Get the current state of swimlanes toggle
        updateUserPreferences({ DarkModeEnabled: darkModeEnabled, SwimlanesEnabled: swimlanesEnabled });
    });

    // Swimlane Toggle
    $('#swimlanes-toggle').on('change', function () {
        const swimlanesEnabled = this.checked;
        const darkModeEnabled = $('#darkmode-toggle').prop('checked'); // Get the current state of dark mode toggle
        updateUserPreferences({ DarkModeEnabled: darkModeEnabled, SwimlanesEnabled: swimlanesEnabled });
    });

    // Function to update user preferences
    function updateUserPreferences(preferences) {
        // AJAX request to update the user preferences
        $.ajax({
            url: '/Settings/UpdatePreferences',
            method: 'POST',
            data: { userPreference: preferences },
        });
    }


</script>


