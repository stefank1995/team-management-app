@inject UserManager<AppUser> UserManager
@using TeamManagementApp.Models
@model List<Team>
@{
	ViewData["Title"] = "Teams";   
}

<div class="container-fluid container-full-height">
	<div id="chat-page" class="row">
		<div id="chat-teams" class="col-md-3 teams-section">
			<!-- Team List and Buttons -->
			<div class="mb-3">
				<div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;">
					<h4 class="card-title">Teams</h4>
					<!-- Create a Team button -->
					<button id="open-create-btn" class="btn btn-primary">Create New</button>
				</div>
				<ul class="list-group team-list">
					@foreach(var team in Model)
					{
						<li class="list-group-item team-list-item d-flex justify-content-between align-items-center">
							<a href="#">@team.Name</a>
							<form id="assign-team-@team.Id" asp-area="" asp-controller="Team" asp-action="Assign" method="post">
								<input type="hidden" name="id" value="@team.Id" />
								<button class="btn btn-primary">+</button>
							</form>
							
							<form id="delete-team-@team.Id" asp-area="" asp-controller="Team" asp-action="Delete" method="post" onsubmit="return confirmDelete('@team.Id');">
								<input type="hidden" name="id" value="@team.Id" />
								<button type="submit" class="btn btn-danger mb-2">x</button>
							</form>
						</li>
					}
				</ul>
			</div>
			
		</div>
		<div class="col-md-6">
			<!-- Chat Area -->
			<div id="chat-area" class="mb-3 card">
				<div class="card-header">
					<h4 class="card-title">Chat</h4>
				</div>
				<div id="chat-messages" class="card-body">
					<!-- Chat messages will be displayed here -->
					text<br />
					text<br />
					text<br />
					text<br />
					text<br />
					text<br />
					text<br />
					text<br />
				

					
				</div>
				
			</div>
			<!-- Input field and send button for sending messages -->
			<div class="input-group">
				<input type="text" class="form-control" placeholder="Type your message" id="message-input">
				<button class="btn btn-primary" id="send-message">Send</button>
			</div>
		</div>
		<div class="col-md-3">
			<div id="members-area" class="card">
				<div class="card-header">
					<h4 class="card-title">Team members</h4>
				</div>
				<div id="members-list" class="card-body">
					@foreach (var user in UserManager.Users)
					{
						<a href="#">@user.FullName<br /></a>
					}
				</div>
				
			</div>

		</div>
	</div>
</div>


@Html.Partial("_CreateTeam", new Team())
@Html.Partial("_AssignTeam", new Team())




<style>
	



	.list-group {
		max-height: 300px; /* Adjust the maximum height as needed */
		overflow-y: auto;
	}

	#chat-page {
		height: 90vh;
	}

	#chat-area {
		height: 80vh;
	}

	#members-area {
		height: 90vh;
	}

	#chat-messages {
		max-height: 90%; /* Adjust the maximum height as needed */
		min-height: 90%;
		overflow-y: auto;
	}

	#members-list{
		max-height: 100%; /* Adjust the maximum height as needed */
		min-height: 100%;
		overflow-y: auto;
	}

	#chat-teams {
		max-height: 100%; /* Adjust the maximum height as needed */
		min-height: 100%;
		overflow-y: auto;
	}

	.container-full-height {
		height: 95vh; /* 100% of the viewport height */
	}

	.teams-section {
		background-color: #f8f9fa; /* Light gray background */
		overflow-y: auto; /* Add a scrollbar when needed */
		padding: 15px; /* Add some padding for better appearance */
		border: 1px solid #dee2e6; 
	}

	.team-list {
		max-height: calc(100% - 50px); /* Adjust the max height as needed */
	}

	.team-list-item {
		/*border: none; /* Remove borders */*/
	}

</style>

<script>
	// JavaScript to show and hide the modal
	const openCreateBtn = document.getElementById('open-create-btn');
	const teamCreateModal = document.getElementById('team-create-modal');
	const closeCreateBtn = document.getElementById('close-create-btn');

	openCreateBtn.addEventListener('click', function() {
		teamCreateModal.style.display = 'flex';
	});

	closeCreateBtn.addEventListener('click', function () {
		teamCreateModal.style.display = 'none';
	});

	// Close the modal when clicking outside of it
	teamCreateModal.addEventListener('click', function (event) {
		if (event.target === teamCreateModal) {
			teamCreateModal.style.display = 'none';
		}
	});
</script>

<script>
	// JavaScript to show and hide the modal
	const openAssignBtn = document.getElementById('open-assign-btn');
	const teamAssignModal = document.getElementById('team-assign-modal');
	const closeAssignBtn = document.getElementById('close-assign-btn');

	openAssignBtn.addEventListener('click', function () {
		teamAssignModal.style.display = 'flex';
	});

	closeAssignBtn.addEventListener('click', function() {
		teamAssignModal.style.display = 'none';
	});

	// Close the modal when clicking outside of it
	teamAssignModal.addEventListener('click', function (event) {
		if (event.target === teamAssignModal) {
			teamAssignModal.style.display = 'none';
		}
	});
</script>

<script>
	function confirmDelete(teamId) {
		Swal.fire({
			title: 'Are you sure?',
			text: 'This action will delete the team. This cannot be undone.',
			icon: 'warning',
			showCancelButton: true,
			confirmButtonText: 'Yes, delete it!',
			cancelButtonText: 'Cancel',
			reverseButtons: true
		}).then((result) => {
			if (result.isConfirmed) {
				// Submit the form with the corresponding teamId
				document.getElementById('delete-team-' + teamId).submit();
			}
		});
		return false; // Prevent form submission by default
	}

</script>

<!-- JavaScript to load members for the selected team and add the "active" class -->
<script>
	$(document).ready(function () {
		// Event listener for team list items
		$(".team-list-item").click(function () {
			// Remove "active" class from all team list items
			$(".team-list-item").removeClass("active");

			// Get the selected team's ID from the data attribute
			var teamId = $(this).data("team-id");

			// Add "active" class to the clicked team list item
			$(this).addClass("active");

			// Make an AJAX request to retrieve members for the selected team
			//$.ajax({
			//	url: "/Team/GetMembers", // Replace with the actual server endpoint
			//	method: "GET",
			//	data: { teamId: teamId },
			//	success: function (data) {
			//		// Update the "members-list" with the retrieved members
			//		$("#members-list").html(data);
			//	},
			//	error: function () {
			//		alert("Error loading team members.");
			//	}
			//});
		});
	});
</script>




